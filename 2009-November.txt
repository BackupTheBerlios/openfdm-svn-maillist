From frohlich at mail.berlios.de  Fri Nov 27 07:23:19 2009
From: frohlich at mail.berlios.de (frohlich at BerliOS)
Date: Fri, 27 Nov 2009 07:23:19 +0100
Subject: [OpenFDM-svn] r1118 -
	branches/OpenFDM-StateSeparation/src/OpenFDM/XML
Message-ID: <200911270623.nAR6NJwB011569@sheep.berlios.de>

Author: frohlich
Date: 2009-11-27 07:23:17 +0100 (Fri, 27 Nov 2009)
New Revision: 1118

Modified:
   branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp
Log:
Use SharedPtr::valid.

M    ExpatXMLReader.cpp


Modified: branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp
===================================================================
--- branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp	2009-10-13 20:26:34 UTC (rev 1117)
+++ branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp	2009-11-27 06:23:17 UTC (rev 1118)
@@ -1,4 +1,4 @@
-/* -*-c++-*- OpenFDM - Copyright (C) 2004-2009 Mathias Froehlich 
+/* -*-c++-*- OpenFDM - Copyright (C) 2004-2009 Mathias Froehlich
  *
  */
 
@@ -166,14 +166,14 @@
   XML_SetSkippedEntityHandler(parser, ExpatSkippedEntity);
 #endif
 
-  if (mContentHandler)
+  if (mContentHandler.valid())
     mContentHandler->startDocument();
 
   unsigned bufSize = 32*1024;
   char* buf = new char[bufSize];
   while (!stream.eof()) {
     if (!stream.good()) {
-      if (mErrorHandler)
+      if (mErrorHandler.valid())
         mErrorHandler->fatalError("ExpatXMLReader: "
                                   "Can not read from input stream",
                                   XML_GetCurrentLineNumber(parser),
@@ -185,7 +185,7 @@
 
     stream.read(buf, bufSize);
     if (!XML_Parse(parser, buf, stream.gcount(), false)) {
-      if (mErrorHandler)
+      if (mErrorHandler.valid())
         mErrorHandler->fatalError("ExpatXMLReader: Error from Parser",
                                   XML_GetCurrentLineNumber(parser),
                                   XML_GetCurrentColumnNumber(parser));
@@ -196,7 +196,7 @@
   }
 
   if (!XML_Parse(parser, buf, 0, true)) {
-    if (mErrorHandler)
+    if (mErrorHandler.valid())
       mErrorHandler->fatalError("ExpatXMLReader: Error from Parser",
                                 XML_GetCurrentLineNumber(parser),
                                 XML_GetCurrentColumnNumber(parser));
@@ -208,7 +208,7 @@
   XML_ParserFree(parser);
   delete [] buf;
 
-  if (mContentHandler)
+  if (mContentHandler.valid())
     mContentHandler->endDocument();
 }
 



From frohlich at mail.berlios.de  Sat Nov 28 21:58:39 2009
From: frohlich at mail.berlios.de (frohlich at BerliOS)
Date: Sat, 28 Nov 2009 21:58:39 +0100
Subject: [OpenFDM-svn] r1119 -
	branches/OpenFDM-StateSeparation/src/OpenFDM/XML
Message-ID: <200911282058.nASKwdRg009751@sheep.berlios.de>

Author: frohlich
Date: 2009-11-28 21:58:38 +0100 (Sat, 28 Nov 2009)
New Revision: 1119

Modified:
   branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp
Log:
Fix The expat attribute handling implementation.


Modified: branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp
===================================================================
--- branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp	2009-11-27 06:23:17 UTC (rev 1118)
+++ branches/OpenFDM-StateSeparation/src/OpenFDM/XML/ExpatXMLReader.cpp	2009-11-28 20:58:38 UTC (rev 1119)
@@ -36,8 +36,8 @@
 int
 ExpatXMLAttributes::getIndex(const char* qName) const
 {
-  for (unsigned i = 0; mAtts[i] != 0; i += 2) {
-    if (strcmp(mAtts[i*2], qName) == 0)
+  for (unsigned i = 0; mAtts[2*i] != 0; ++i) {
+    if (strcmp(mAtts[2*i], qName) == 0)
       return i;
   }
   return -1;
@@ -70,15 +70,15 @@
 const char*
 ExpatXMLAttributes::getValue(int index) const
 {
-  return (index < mLength) ? mAtts[index*2+1] : 0;
+  return (0 <= index && index < mLength) ? mAtts[index*2+1] : 0;
 }
 
 const char*
 ExpatXMLAttributes::getValue(const char* qName) const
 {
   for (unsigned i = 0; mAtts[i] != 0; i += 2) {
-    if (strcmp(mAtts[i*2], qName) == 0)
-      return mAtts[i*2+1];
+    if (strcmp(mAtts[i], qName) == 0)
+      return mAtts[i+1];
   }
   return 0;
 }



